# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.js':
  'var func':
    'prefix': 'varf'
    'body': """
      var ${1:FunctionName} = function (${2:params}) {
        $3
      };
    """
  'suite()':
    'prefix': 'suite'
    'body': """
      suite(\'${1:name}\', () => {
        $2
      });
    """
  'setup()':
    'prefix': 'setup'
    'body': """
      setup(() => {
        $1
      });
    """
  'teardown()':
    'prefix': 'teardown'
    'body': """
      teardown(() => {
        $1
      });
    """
  'test()':
    'prefix': 'test'
    'body': """
      test(\'${1:description}\', () => {
        $2
      });
    """
  'module.exports':
    'prefix': 'module'
    'body': 'module.exports = ${1:ClassName};'
